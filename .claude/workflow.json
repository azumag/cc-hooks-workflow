{
  "hooks": [
    {
      "launch": null,
      "path": "hooks/workflow-test.sh",
      "next": "WORKFLOW_TESTED",
      "handling": "block"
    },
    {
      "launch": "WORKFLOW_TESTED",
      "prompt": "git diffを確認し、README.md を更新せよ。更新後、 WORKFLOW_README_UPDATED とだけ表示せよ。"
    },
    {
      "launch": "WORKFLOW_README_UPDATED",
      "prompt": "## Most Important: When modifications based on the review are complete, do not write WORKFLOW_REVIEWED. Instead, provide a report of the work.  Only if the review concludes that there are no issues, output a single line that says only WORKFLOW_REVIEWED — no other information should be included. ## Review: Assign the task of a strict review to the Review SubAgent, and make necessary corrections based on the results.  Understand the changes yourself by checking git diff or commit history.  ## Perspectives: - YAGNI: Don’t implement features that aren’t needed right now - DRY: Don’t repeat yourself - KISS: Keep it simple, stupid t-wada - TDD: Test-Driven Development inspired by t-wada. ## Work Report: $WORK_SUMMARY "
    },
    {
      "launch": "WORKFLOW_REVIEWED",
      "prompt": "git commit を実行してください。 コミットメッセージには、作業内容の要約を含めてください。作業が完了したら WORKFLOW_COMMITTED とだけ表示せよ。"
    },
    {
      "launch": "WORKFLOW_COMMITTED",
      "prompt": "git pushを実行してください。pushが完了したら WORKFLOW_PUSHED とだけ表示せよ。"
    },
    {
      "launch": "WORKFLOW_PUSHED",
      "path": "hooks/ci-check.sh",
      "next": "WORKFLOW_CI_CHECKED",
      "handling": "block"
    },
    
    {
      "launch": "WORKFLOW_CI_CHECKED",
      "prompt": "CLAUDE.md を再確認せよ。再確認後、 WORKFLOW_CLAUDE_RECALL とだけ表示せよ。"
    },
    {
      "launch": "WORKFLOW_CLAUDE_RECALL",
      "path": "workflow.sh",
      "args": ["--stop"]
    }
  ]
}